Menu="Apps"
Icon="community.applications.png"
Title="Community Applications"
Tag="users"
---
<?
###############################################################
#                                                             #
# Community Applications copyright 2015-2019, Andrew Zawadzki #
#                    All Rights Reserved                      #
#                                                             #
###############################################################
$plugin = "community.applications";

require_once("/usr/local/emhttp/plugins/$plugin/include/paths.php");
require_once("/usr/local/emhttp/plugins/$plugin/include/helpers.php");

$cfg = parse_plugin_cfg($plugin);
if ( ! is_file($communityPaths['warningAccepted']) ) {
	$firstRun = "true";
}
$unRaidSettings = parse_ini_file($communityPaths['unRaidVersion']);
$unRaid66 = version_compare($unRaidSettings['version'],"6.5.3",">");

if ( is_file($communityPaths['addConverted']) ) {
	$dockerConvertFlag = "true";
}
$date = (date("n/d"));
?>
<link type='text/css' rel='stylesheet' href="<?=autov("/plugins/$plugin/skins/Narrow/css.php")?>" >
<link type='text/css' rel='stylesheet' href='<?=autov("/plugins/$plugin/styles/awesomplete.css")?>'>
<script src='<?autov("/plugins/community.applications/javascript/libraries.js")?>'></script>
<script>
var URL = "/plugins/<?=$plugin?>/include/exec.php";
var last = $('input[name$="tabs"]').length;
var searchBoxInput;
var searchBoxAwesomplete;
var pluginInstallIntervalTimer;

var data = new Object();
data.docker = "";
data.section = "AppStore";
data.selected_category = "";
data.subcategory = "";
data.selected_subcategory = "";
data.selected = "";
data.lastUpdated = 0;
data.nextpage = 0;
data.prevpage = 0;
data.currentpage = 1;
data.searchFlag = false;
var dockerSearchFlag = false;
var ca_WarningItems = [];
var currentWarning = 0;
var warningInterval;
var dockerNotEnabled;
var postCount = 0;
var cookieWarning = false;
var dockerWarningAdded = false;

$(function(){
	caPluginUpdateCheck("community.applications.plg",{
			noDismiss:true,
			name:"Community Applications",
			debug:false,
			priority:true
		},function(result) {
			var result = JSON.parse(result);
			$("#caInstalledVersion").html(result.installedVersion);
			if ( result.updateAvailable ) {
				ca_WarningItems.push(result.HTML);
			}
		}
	);

	$("#title").append('<div id="Category" class="categoryLine ca_italic"></div>');
	$("#title").append("<div class='searchArea'><span id='sortIconArea' style='display:none;'><i class='sortIcons fa fa-sort-alpha-asc enabledIcon ca_staticTips' title='Sort By Name Ascending' data-sort='nameUp'></i><i class='sortIcons fa fa-sort-alpha-desc ca_staticTips' title='Sort By Name Descending' data-sort='nameDown'></i><i class='sortIcons fa fa-sort-numeric-desc ca_staticTips' title='Sort By Downloads' data-sort='downloadsDown'></i><i class='sortIcons fa fa-sort-amount-desc ca_staticTips' title='Sort By Trend' data-sort='trendDown'></i><i class='sortIcons fa fa-calendar ca_staticTips' title='Sort By Date Added' data-sort='firstSeenDown'></i></span><span id='sortIcon' class='fa fa-sort ca_toolsView disabledIcon'> <span class='fa-sort-alpha-asc'></span></span>&nbsp;<span id='searchFilter' class='status' style='margin-top:-1rem;'><input type='text' id='searchBox' placeholder='Search' autofocus><button class='searchSubmit' style='margin-right:10px' onclick='doSearch(true)'><i id='searchButton' class='fa fa-search fa-lg'></i></button></div>");

	searchBoxInput = document.getElementById("searchBox");
	searchBoxAwesomplete = new Awesomplete(searchBoxInput);

	if ( "<?=$date?>" == "5/29" ) addWarning("Happy Birthday CA!",false);
	if ( "<?=$date?>" == "12/24" ) addWarning("Happy Holidays from Andrew, Tracey, and family",false);
	if ( "<?=$date?>" == "12/25" ) addWarning("Happy Holidays from Andrew, Tracey, and family",false);
	if ( "<?=$date?>" == "1/01" ) addWarning("Happy New Years!",false);
	


	if ( isTouch ) {
		templates_content.addEventListener("touchstart", startTouch, false);
		templates_content.addEventListener("touchmove", moveTouch, false);
		 
		// Left / Right
		var initialX = null;
		var initialY = null;
		 
		function startTouch(e) {
			initialX = e.touches[0].clientX;
			initialY = e.touches[0].clientY;
		};
		 
		function moveTouch(e) {
			if (initialX === null) {
				return;
			}
		 
			if (initialY === null) {
				return;
			}
		 
			var currentX = e.touches[0].clientX;
			var currentY = e.touches[0].clientY;
		 
			var diffX = initialX - currentX;
			var diffY = initialY - currentY;
		 
			if (Math.abs(diffX) > Math.abs(diffY)) {
				// sliding horizontally
				if (diffX > 0) {
					// swiped left
					if ( $(".pageNavigation").length ) {
						if ( data.nextpage > 1 ) {
							if ( dockerSearchFlag ) {
								dockerSearch(data.nextpage);
							} else {
								changePage(data.nextpage);
							}
						}
					}
				} else {
					// swiped right
					if ( $(".pageNavigation").length ) {
						if ( data.prevpage > 0 ) {
							if ( dockerSearchFlag ) {
								dockerSearch(data.prevpage);
							} else {
								changePage(data.prevpage);
							}
						}
					}
				}  
			}
		 
			initialX = null;
			initialY = null;
			 
			e.preventDefault();
		};		
	}

	$('.ca_toolsView').tooltipster({
		trigger: 'hover',
		delay: [1000,0],
		animation: 'fade',
		triggerClose: {mouseleave:true},
		functionBefore: function(instance,helper){
			if ( isIconEnabled("#sortIcon") ) {
				instance.content("Sorting options");
			} else {
				instance.content("Sorting options unavailable");
			}
		}
	});
	
	$('.ca_staticTips').tooltipster({
		contentAsHTML:true,
		delay:[1000,1],
		timer:15000,
		animation:'none',
		arrow:true,
		trigger:'custom',
		triggerOpen:{mouseenter: true, hover: true},
		triggerClose:{click:true,scroll:true,mouseleave:true}
	});

	$("#searchBox").keydown(function(e) {
		if (e.which === 13) {
			doSearch();
		}
	});
	
	$('.caChangeLog').on("click",function() {disableSort();scrollToTop();caChangeLog();});
	$('.mainArea').on("click",'.ca_multiselect',function() {enableMultiInstall();});
	$('.mainArea').on("click",".ca_appPopup",function() {
		var appnumber = $(this).data("appnumber");
		var apppath = $(this).data("apppath");
		var appname = $(this).data("appname");
		appname = stripTags(appname);
		showDesc_openBox("/plugins/community.applications/scripts/showDesc.php?appNumber="+appnumber+"&appPath="+apppath+"&appName="+appname+"'",appname,450,650,true,"checkForPluginInstallRequested()");
	});
	$('.menuItems').on("click",'.categoryMenu',function() {
		var selectedCategory = $(this).attr("data-category");
		scrollToTop();
		changeCategory(this,false);
	});
	$('.menuItems').on("mouseover",".caMenuItem",function() {
		$(this).addClass("hoverMenu");
	});
	$('.menuItems').on("mouseleave",".caMenuItem",function() {
		$(this).removeClass("hoverMenu");
	});
	$('.menuItems').on("click",".caMenuItem",function() {
		if ( $(this).hasClass("selectedMenu") ) {
			return;
		}
		if ( ! $(this).parent().hasClass("subCategory") ) {
			$(".subCategory").hide();
		}
		$(".caMenuItem").removeClass("selectedMenu");
		$(this).addClass("selectedMenu");
		$(this).next().show();
	});
	
	$(".sectionMenu").on("click",function() {
		var section = $(this).attr("data-category");
		switch (section) {
			case "installed_apps":
				previousApps(true);
				break;
			case "previous_apps":
				previousApps(false);
				break;
			case "pinned_apps":
				pinnedApps();
				break;
		}
	});
		
	$(".initDockerSearch").click(function()     { initDockerSearch(); });
	$(".multi_installButton").click(function()  { installMulti(); });
	$(".multi_installClear").click(function()   { clearMultiInstall(); });
	$(".startupButton").click(function()        { updateContent(this); });
	$("#sortIcon").click(function() {
		if ( isIconEnabled("#sortIcon") ) {
			$("#sortIconArea").toggle("slow");
		}
	});
	$(".sortIcons").click(function() {
		enableSortIcon(this);
		data.currentpage = 1;
		changeSortOrder();
		$("#sortIconArea").toggle("slow");
		var classList = $(this).attr('class').split(/\s+/);
		$.each(classList, function(index, item) {
			if ( item.startsWith("fa-") ) {
				$("#sortIcon").html("&nbsp;<span class="+item+"></span>");
			}
		});
	});

<?if ( ! $unRaid66 ):?>
	$("html").css("font-size","10px");
<?endif;?>
	/* Everything is now initialized.  This is the start of the actual "real" code */
	if ( "<?=$firstRun?>" == "true" ) {
		swalBackground("white");
		swal({
			title: 'Disclaimer',
			text: 'All applications listed here are <span class="ca_bold">3rd party</span> additions to unRaid.  Neither the authors of Community Applications nor Limetech make any warranty as to the suitability of any application listed here. <br><span class="ca_italic"><font color="green">Every attempt is made to ensure that only safe and compatible applications are present</font></span><font size=0><br>Note: if your flash drive is corrupted you may also see this message and it will need to be fixed first</font>',
			html: true,
			type: 'error',
			footer: "test",
			showCancelButton: true,
			showConfirmButton: true,
			confirmButtonText: 'I Understand'
		}, function (isConfirm) {
			if ( isConfirm ) {
				post({action:'dismiss_warning'},function(result) {
					location.reload();
				});
			} else {
				addWarning("Installations of apps disabled.  You must accept the warning to be able to install applications.  Click <a onclick='window.location.reload();' style='cursor:pointer;'>HERE</a>");
				updateContent();
			}
		});
	} else {
		if ( (document.referrer.indexOf("/Apps/") > 1) && ( document.referrer.indexOf("/Apps/ca_settings") < 1 ) && cookiesEnabled() && ("<?=$dockerConvertFlag?>" != "true") ) {
			restoreState();
			refreshDisplay();
		} else {
			updateContent();
		}
	}
});

function disableSort() {
	hideSortIcons();
	enableIcon("#sortIcon",false);
}
function hideSortIcons() {
	$("#sortIconArea").hide("slow");
}
function updateContent(button) {
	hideSortIcons();
	clearSearchBox();
	$("#Category").html("");
	$(".caMenuItem").each(function() {
		$(this).removeClass("selectedMenu");
	});
	$(".subCategory").each(function() {
		$(this).hide();
	});
	startupScreen = $.cookie("startupButton") ? $.cookie("startupButton") : "onlynew";
	$(".caMenuItem[data-category='"+startupScreen+"']").addClass("selectedMenu")

	var appFeedModeMsg = button ? "" : "Retrieving the latest application Lists";

	startupScreen = button ? $(button).data("category") : startupScreen;
	$.cookie("startupButton",startupScreen,{expires:365});
	$.cookie("selectedMenu",startupScreen,{expires:365});
	disableSearch();
	if ( appFeedModeMsg ) {
		myAlert("Updating Content",appFeedModeMsg,true,"40");
	}
	post({action:'force_update'}, function(result) {
		if ( $.cookie("plugininstallpending" || ! appFeedModeMsg ) ) {
			var plugins = $.cookie("plugininstallpending");
			$.removeCookie("plugininstallpending");
			myCloseAlert();
			openBox('/plugins/<?=$plugin?>/scripts/installMultiPlugin.sh&arg1='+plugins,'Install Plugin Applications',600,900,true);
		} else {
			if ( result.data ) {
				updateDisplay(result.data);
			} else {
				getContent(true,'INITIALIZE',"","",startupScreen);
			}
		}
		getCategories();
	});
}

function enableSortIcon(icon) {
	$(".sortIcons").removeClass("enabledIcon");
	$(icon).addClass("enabledIcon");
}

function enableIcon(icon,enable) {
	enable = (enable == "false") ? false : enable;
	$(icon).each(function() {
		$(this).removeClass("enabledIcon disabledIcon");
		var newClass = enable ? "enabledIcon" : "disabledIcon";
		$(this).addClass(newClass);
	});
}

function isIconEnabled(icon) {
	return $(icon).hasClass("enabledIcon");
}

function stripTags(string) {
	return string.replace(/(<([^>]+)>)/ig,"");
}

function setToolTip() {
	$('.ca_tooltip').tooltipster({
		contentAsHTML:true,
		delay:[1000,1],
		timer:15000,
		animation:'none',
		arrow:true,
		trigger:'custom',
		triggerOpen:{mouseenter: true},
		triggerClose:{click:true,scroll:true,mouseleave:true}
	});
	$('.ca_tooltip-warning').tooltipster({
		contentAsHTML:true,
		interactive:true,
		trigger:'custom',
		triggerOpen:{click: true, mouseenter: true},
		triggerClose:{click:true,scroll:true,mouseleave:true}
	});
}

// Wait for the showDesc modal to close before opening another to install plugin
function checkForPluginInstallRequested() {
	var pluginURL = $.cookie("installPluginURL");
	if ( pluginURL ) {
		pluginInstallIntervalTimer = setInterval(modalPluginInstall,100);
	}
}

function modalPluginInstall() {
	if ( ! $("#sb-container").is(":visible") ) {
		clearInterval(pluginInstallIntervalTimer);
		var pluginURL = $.cookie("installPluginURL");
		$.removeCookie("installPluginURL");
		installPlugin(pluginURL);
	}
}

function showSpecialCategory(button) {
	$(".caMenuItem").removeClass("selectedMenu");
	$(".multi_installDiv").hide();
	data.selected_category = "DOESNTMATTERWHATSHERE";
	data.section = "AppStore";
	changeCategory(button,false);
}

function changeCategory(button,subSwitch) {
	var description = $(button).text();
	var category = $(button).attr("data-category");
	clearSearchBox();
	hideSortIcons();
	clearCategory();
	$(".multi_installDiv").hide();
	getContent(false,category,description,false);
}

function changePage(pageNumber) {
	var sortOrder = getSortOrder();
	var selected = data.selected;
	data.currentpage = pageNumber;

	var oldHeight = $(".ca_templatesDisplay").height();
	$(".ca_templatesDisplay").css("height",oldHeight);
	hideSortIcons();
	post({action:'display_content',sortOrder:sortOrder,pageNumber:pageNumber,selected:selected},function(result) {
		updateDisplay(result.display);
		$(".ca_templatesDisplay").css("height","auto");
	});
}

function swalBackground(color) {
	$(".sweet-alert").css("background-color",color);
}

function myAlert(description,textdescription,textimage,imagesize, outsideClick, showCancel, showConfirm, alertType) {
	swalBackground("white");
	if ( !outsideClick ) outsideClick = false;
	if ( !showCancel )   showCancel = false;
	if ( !showConfirm )  showConfirm = false;
	if ( imagesize == "" ) { imagesize = "80"; }
	disableSearch();

	swal({
		title: description,
		text: textdescription,
		allowOutsideClick: outsideClick,
		showConfirmButton: showConfirm,
		showCancelButton: showCancel,
		type: alertType,
		animation: false,
		html: true
	});
}

function mySpinner() {
	$("div.spinner").show();
	swalBackground("transparent");
	swal({
		title: "",
		text: "",
		allowOutsideClick: false,
		showConfirmButton: false,
		showCancelButton: false,
		animation: false,
		html: true
	});	
	swalBackground("transparent"); // Occasional race condition where swal is not initialized at time the initial background change happens

}
function myCloseSpinner() {
	swal.close();
	$("div.spinner").hide();
}

function myCloseAlert() {
	swal.close();
	$(".sweet-alert").css("background-color","transparent");
	enableSearch();
}

function doSearch(button,newSearch) {
	searchBoxAwesomplete.close();
	hideSortIcons();

	if ( ! newSearch === false ) {
		$('#searchBox').val(newSearch);
	}
	var filter = $('#searchBox').val();
	if ( button && ! filter) {
		$("#searchBox").attr("placeholder","Please enter search term");
		return;
	} else {
		$("#searchBox").attr("placeholder","Search");
	}
	data.docker = "";
	data.section = "AppStore";
	filter = filter.replace(/[^a-z0-9]/gi,' ')
	filter = $.trim(filter);
	$('#searchBox').val(filter);
	$(".multi_installDiv").hide();

	if ($('#searchButton').hasClass('fa-search')) {
		if (filter) {
			$('#searchButton').toggleClass('fa-search fa-remove');
		}
	} else if (button) {
		clearSearchBox();
		filter = '';
	} else {
		if (!filter) {
			return;
		}
	}

	scrollToTop();
	if (filter) {
		$("#Category").html("Search for "+filter);
		enableIcon("#sortIcon",true);
		data.searchFlag = true;
	} else {
		updateContent();
		data.searchFlag = false;
		return;
	}
	var sortOrder = getSortOrder();
	if ( "<?=$cfg['dockerSearch']?>" == "yes" && ! dockerNotEnabled) {
		$('.dockerSearch').show();
	}

	post({action:'get_content',filter:filter,sortOrder:sortOrder},function(result) {
		enableButtons();
		updateDisplay(result.display);
		data.section = "AppStore";
		$(".selectedMenu").removeClass("selectedMenu");
	});
}

function enableButtons() {
	data.selected_category = "";
}

function refreshDisplay() {
	changeSortOrder(null,null,null);
}

function changeSortOrder(button,buttonClass,previousApps) {
	var pageNumber = data.currentpage;
	var selected = data.selected;
	var sortOrder = getSortOrder();
	var startup = false;

	$(".startupButton").each(function(){
		if ($(this).hasClass("selectedMenu")) {
			startup = "true";
		}
	});
	post({action:'display_content',sortOrder:sortOrder,pageNumber:pageNumber,selected:selected,startup:startup},function(result) {
		updateDisplay(result.display);
	});
}

function getSortOrder() {
	var sortOrder = new Object();

	$(".sortIcons").each(function() {
		if ( isIconEnabled(this) ) {
			switch ( $(this).data("sort") ) {
				case 'nameUp':
					sortOrder.sortBy = ["sortBy","Name"];
					sortOrder.sortDir = ["sortDir","Up"];
					break;
				case 'nameDown':
					sortOrder.sortBy = ["sortBy","Name"];
					sortOrder.sortDir = ["sortDir","Down"];
					break;
				case 'downloadsDown':
					sortOrder.sortBy = ["sortBy","downloads"];
					sortOrder.sortDir = ["sortDir","Down"];
					break;
				case 'trendDown':
					sortOrder.sortBy = ["sortBy","trending"];
					sortOrder.sortDir = ["sortDir","Down"];
					break;
				case 'firstSeenDown':
					sortOrder.sortBy = ["sortBy","FirstSeen"];
					sortOrder.sortDir = ["sortDir","Down"];
					break;
			}
		}
	});
	return [sortOrder.sortBy,sortOrder.sortDir];
}

function getContent(init,category,description,newApp,startupDisplay) {
	data.currentpage = 1;
	var initialize;

	enableSearch();
	if ( init == true ) {
		enableIcon("#sortIcon",false);
	} else {
		enableIcon("#sortIcon",true);
	}

	if ( category != "NONE" ) {
		if ( category == "INITIALIZE" ) {
			initializeAppStore();
			category = "NONE";
			initialize = true;
			enableButtons();
		}
		if ( (category == "New") || (category == "All") ) { category = ""; }

		var sortOrder = getSortOrder();

		post({action:'get_content',category:category,newApp:newApp,sortOrder:sortOrder,startupDisplay:startupDisplay},function(result) {
			updateDisplay(result.display);

			if ( initialize ) {
				populateAutoComplete();
			}
		});
	}
	$('.dockerSearch').hide();
}

function populateAutoComplete() {
	post({action:'populateAutoComplete'},function(result) {
		var test = JSON.stringify(result.autocomplete);
		var test2 = JSON.parse(test);
		searchBoxAwesomplete.list = test.replace(/\"/g,"");
		searchBoxAwesomplete.maxItems = 20;
		Awesomplete.$('#searchBox').removeEventListener('awesomplete-selectcomplete',awesompleteSearch)
		Awesomplete.$('#searchBox').addEventListener('awesomplete-selectcomplete',awesompleteSearch)
	});
}

function awesompleteSearch() {
	doSearch(false);
}

function mySearch(filter) {
	filter = filter.replace(/<(?:.|\n)*?>/gm, '');
	$('#searchBox').val(filter);

	if ( $("#searchButton").hasClass('fa-search') ) {
		$('#searchButton').toggleClass('fa-search fa-remove');
	}
	initDockerSearch(1);
}

function initDockerSearch() {
	dockerSearch(1);
	data.docker = "searching docker";
	data.section = "";
	data.selected_category = "";
	$(".selectedMenu").removeClass("selectedMenu");
	hideSortIcons();
	$(".subCategory").hide(300);
}

function dockerSearch(pageNumber) {
	var filter = $('#searchBox').val();
	var dockerURL = "https://registry.hub.docker.com/search?q=" + filter;
	data.docker = "searching docker";
	enableIcon("#sortIcon",false);
	$(".dockerSearch,.multi_installDiv").hide();
	$("#Category").html("DockerHub Search for "+filter+" <span id='pageNumber'></span>");
	var sortOrder = getSortOrder();
	post({action:'search_dockerhub',filter:filter,page:pageNumber,sortOrder:sortOrder},function(result) {
		updateDisplay(result.display);
	});
}

function dockerConvert(dockerID) {
	post({action:'convert_docker',ID:dockerID},function(result) {
		myCloseAlert();
		templateURL = "/Apps/AddContainer?xmlTemplate=default:" + $.trim(result.xml);
		window.open(templateURL,"_self");
	});
}

function clearSearchBox() {
	$("#searchBox").val("");
	if ($('#searchButton').hasClass('fa-remove')) {
		$('#searchButton').toggleClass('fa-remove fa-search');
	}
}

function installPlugin(pluginURL) {
	disableSearch();
	my_openBox('/plugins/community.applications/scripts/pluginInstall.sh&arg1=install&arg2='+pluginURL,'Install Plugin',600,900,true,"refreshDisplay()");
}

function my_openBox(cmd,title,height,width,load,func) {
	// open shadowbox window (run in foreground)
	var run = cmd.split('?')[0].substr(-4)=='.php' ? cmd : '/logging.htm?cmd='+cmd+'&csrf_token=<?=$var['csrf_token']?>';
	var options = load ? {modal:true,onClose:function(){ eval(func); }} : {modal:true};
	Shadowbox.open({content:run, player:'iframe', title:title, height:height, width:width, options:options});
}

function showDesc_openBox(cmd,title,height,width,load,func) {
	// open shadowbox window (run in foreground)
	var run = cmd.split('?')[0].substr(-4)=='.php' ? cmd : '/logging.htm?cmd='+cmd+'&csrf_token=<?=$var['csrf_token']?>';
	var options = load ? {modal:false,onClose:function(){ eval(func); }} : {modal:true};
	Shadowbox.open({content:run, player:'iframe', title:title, height:height, width:width, options:options});
}

function showModeration(script,title) {
	$("#sb-nav-close").css("visisbility","visible");
	showDesc_openBox("/plugins/<?=$plugin?>/scripts/showStatistics.php?arg1="+script,title,550,900,true,false);
}

function previousApps(installed) {
	hideSortIcons();
	clearCategory();
	setPageOne();
	data.docker = "";

	clearSearchBox();
	$(".dockerSearch").hide();
	enableIcon("#sortIcon",true);

	post({action:'previous_apps',installed:installed},function(result) {
		if ( installed ) {
			$(".multi_installDiv").hide();
		} else {
			$(".multi_installDiv").show();
			clearMultiInstall();
		}
		changeSortOrder(null,null,"true");
		saveState();
	});
}

function removeApp(application, humanName) {
	disableSearch();
	swalBackground("white");
	swal({
		title: "Delete Template?",
		text: "Are you sure you want to delete <font color='red'><strong><span class='ca_italic'>"+humanName+"</span></strong></font> from the list of previously installed applications?<br><font size='0'>"+application+"</font>",
		type: "warning",
		confirmButtonText: "Yes, delete it!",
		showCancelButton: true,
		showConfirmButton: true,
		allowOutsideClick: true,
		html: true
	}, function(isConfirm) {
		if (isConfirm) {
			post({action:'remove_application',application:application}, function(result) {
				enableSearch();
				previousApps(false);
			});
		} else {
			enableSearch();
		}
	});
}

function uninstallApp(application,humanName) {
	disableSearch();
	swalBackground("white");
	swal({
		title: "Uninstall Application?",
		text: "Are you sure you want to uninstall <font color='red'><strong><span class='ca_italic'>"+humanName+"</span></strong></font>?",
		type: "warning",
		showCancelButton: true,
		showConfirmButton: true,
		confirmButtonText: "Yes, uninstall it!",
		closeOnConfirm: true,
		showLoaderOnConfirm: false,
		allowOutsideClick: true,
		html: true
	}, function(isConfirm) {
		if (isConfirm) {
			application = basename(application);
			my_openBox('/plugins/community.applications/scripts/pluginInstall.sh&arg1=remove&arg2='+application,'Uninstall Plugin',600,900,true,"postUninstallPlugin()");
		} else {
			enableSearch();
		}
	});
}

function postUninstallPlugin() {
	previousApps(true);
	enableSearch();
}

function basename(path) {
	return path.split('/').reverse()[0];
}

function deletePrivateApp(path,name,author) {
	var displayPath = path.replace("/boot/config/plugins/","...");
	disableSearch();
	swalBackground("white");	
	swal({
		title: "Remove Private Application?",
		text: "Are you sure you want to remove the private application <span class='ca_italic'><font color='red'><span class='ca_bold'>"+name+"</span></font> by <font color='red'><span class='ca_bold'>"+author+"</span></font>?<br><font size='0'>("+displayPath+")",
		type: "warning",
			showCancelButton: true,
			showConfirmButton: true,
			confirmButtonText: "Yes, remove it!",
			closeOnConfirm: false,
			showLoaderOnConfirm: true,
			allowOutsideClick: true,
			html: true
	}, function(isConfirm) {
		if ( isConfirm ) {
			swal("Removing "+name,"","info");
			getSelectedApps();
			post({action:'removePrivateApp',path:path,noSpinner:true},function(result) {
				getCategories();
				myCloseAlert();
				refreshDisplay();
				enableSearch();
			});
		} else {
			enableSearch();
		}
	});
}

function uninstallDocker(application,humanName) {
	disableSearch();
	swalBackground("white");	
	swal({
		title: "Uninstall Application?",
		text: "Are you sure you want to uninstall <font color='red'><strong><span class='ca_italic'>"+humanName+"</span></strong></font>?",
		type: "warning",
		showCancelButton: true,
		showConfirmButton: true,
		confirmButtonText: "Yes, uninstall it!",
		closeOnConfirm: false,
		showLoaderOnConfirm: true,
		allowOutsideClick: true,
		html: true
	}, function( isConfirm ) {
		if ( isConfirm ) {
			myAlert("","Uninstalling "+humanName);
			post({action:'uninstall_docker',application:application,noSpinner:true},function(result) {
				enableSearch();
				previousApps(true);
			});
		} else {
			enableSearch();
		}
	});
}

function appStore() {
	data.nextpage = 0;
	data.prevpage = 0;
	initializeAppStore();
	updateContent();
	$("#Category").html("");
	data.docker = "";
}

function initializeAppStore() {
	data.section = "AppStore";
	data.selected_category = "";
	$(".multi_installDiv").hide();
}

function installPLGupdate(filename,plgName) {
	data.plgfilename = filename;
	if ( filename == "community.applications.plg" ) {
		openBox('/plugins/<?=$plugin?>/scripts/updatePLG.sh&arg1='+filename,'Update '+plgName,600,900,true);
	} else {
		my_openBox('/plugins/<?=$plugin?>/scripts/updatePLG.sh&arg1='+filename,'Update '+plgName,600,900,true,"checkPLGupdate()");
	}
}

function checkPLGupdate() {
	var filename = data.plgfilename;
	post({action:'updatePLGstatus',filename:filename},function(result) {
		var pageNumber = data.currentpage;
		changePage(pageNumber);
	});
}

function pinApp(button,repository,name) {
	$(button).toggleClass("pinned unpinned");
	var pinned = ( $(button).hasClass("unpinned") ) ? "Click to pin this application" : "Click to unpin this application";
	$(button).tooltipster('content',pinned);
	post({action:'pinApp',repository:repository,name:name});
}

function setPageOne() {
	data.currentpage = 1;
}

function clearCategory() {
	$("#Category").html("");
}

function pinnedApps() {
	setPageOne();
	hideSortIcons();
	data.docker = "";
	clearSearchBox();
	clearCategory();
	$(".dockerSearch,.multi_installDiv").hide();
	enableIcon("#sortIcon",true);
	post({action:'pinnedApps'},function(result) {
		refreshDisplay();
		myCloseAlert();
	});
}

function displayTags(leadTemplate) {
	post({action:'displayTags',leadTemplate:leadTemplate,noSpinner:true},function(result) {
		disableSearch();
		swalBackground("white");
		swal({
			title: "Choose A Branch To Install",
			text: result.tags,
			html: true,
			type: "warning",
			showCancelButton: true,
			showConfirmButton: false,
			allowOutsideClick: true
		}, function(isConfirm) {
			if ( ! isConfirm ) {
				enableSearch();
			}
		});
	});
}

function makePlural(string,count) {
	return ( (count > 1) || (count == 0) ) ? string + "s" : string;
}

function getSelectedApps() {
	if ( data.selected ) {
		var selected = JSON.parse(data.selected);
		var docker = selected.docker;
		var plugin = selected.plugin;
	} else {
		var selected = new Object();
		var docker = new Array();
		var plugin = new Array();
	}

	$(".ca_multiselect").each(function() {
		var name = $(this).attr("data-name");
		if ( $(this).is(':checked') ) {
			if ( $(this).attr("data-type") == "plugin" ) {
				plugin.push(name);
			} else {
				docker.push(name);
			}
		} else {
			var index = plugin.indexOf(name);
			if ( index > -1 ) {
				plugin.splice(index,1);
			}
			var index = docker.indexOf(name);
			if (index > -1 ) {
				docker.splice(index,1);
			}
		}
	});
	selected.docker = uniqueArrayElements(docker);
	selected.plugin = uniqueArrayElements(plugin);
	data.selected = JSON.stringify(selected);
	return selected;
}

function uniqueArrayElements(sourceArray) {
	var uniqueEntries = new Array();
	$.each(sourceArray, function(i, el) {
		if ($.inArray(el,uniqueEntries) === -1) {
			uniqueEntries.push(el)
		}
	});
	return uniqueEntries;
}

function enableMultiInstall() {
	var selected = getSelectedApps();
	if ( $.isEmptyObject(selected.docker) && $.isEmptyObject(selected.plugin) ) {
		$(".multi_install,.multi_installClear").attr("disabled",true);
		$(".multi_installButton").val("Install Selected Applications");
	} else {
		$(".multi_install,.multi_installClear").attr("disabled",false);
		var count = selected.plugin.length + selected.docker.length;
		$(".multi_installButton").val("Install "+(selected.plugin.length+selected.docker.length)+" Selected "+makePlural("Application",count));
	}
	getSelectedApps();
}

function clearMultiInstall() {
	data.selected = "";
	$(".ca_multiselect").each(function() {
		$(this).prop("checked",false);
	});
	$(".multi_install,.multi_installClear").attr("disabled",true);
	enableMultiInstall();
}

function installMulti() {
	var docker = new Array();
	var plugin = "";
	var pluginCount = 0;
	var dockerCount = 0;
	var selected = getSelectedApps();
	var cookieWarning = "";

	$.each(selected.plugin,function(i,el) {
		plugin += el + "*";
		pluginCount += 1;
	});
	$.each(selected.docker,function(i,el) {
		docker.push(el);
		dockerCount += 1;
	});
	disableSearch();
	if ( ! cookiesEnabled() && dockerCount && pluginCount ) {
		pluginCount = 0;
		cookieWarning = "<br>Cookies not enabled.  Plugins must be separately installed from docker applications";
	}
	if ( (dockerCount + pluginCount) > 1 ) {
		var buttonText = "Yes, install them";
	} else {
		var buttonText = "Yes, install it";
	}
	swalBackground("white");
	swal({
		title: "Install "+makePlural("Application",dockerCount+pluginCount)+"?",
		text: "Are you sure you want to install "+dockerCount+" docker "+makePlural("application",dockerCount)+" and "+pluginCount+" "+makePlural("plugin",pluginCount)+"?  <span class='ca_italic'>Docker applications will be installed utilizing the most recently saved template with no user input on your part</span><font color='red'>"+cookieWarning+"</font>",
		type: "info",
		showCancelButton: true,
		showConfirmButton: true,
		confirmButtonText: buttonText,
		closeOnConfirm: false,
		showLoaderOnConfirm: true,
		allowOutsideClick: true,
		html: true
	}, function( isConfirm ) {
		if ( isConfirm ) {
			myCloseAlert();
			if ( docker.length && plugin.length ) {
				$.cookie("plugininstallpending",plugin);
			}
			if ( docker.length ) {
				$("#sb-nav-close").css("visibility","hidden"); // Because docker install cannot be aborted so why allow window to close
				openBox('/plugins/<?=$plugin?>/scripts/installMulti.php?plugin='+plugin+'&docker='+docker,'Install Docker '+makePlural("Application",dockerCount),600,1100,true);
			} else {
				openBox('/plugins/<?=$plugin?>/scripts/installMultiPlugin.sh&arg1='+plugin,'Install Plugin '+makePlural("Application",pluginCount),600,900,true);
				enableSearch();
			}
		} else {
			enableSearch();
		}
	});
}

function updateDisplay(data) {
	$("#templates_content").html(data);
	handle_HTTP_icons();
	setToolTip();
	enableSearch();
	saveState();
	myCloseAlert();
}

function handle_HTTP_icons() {
	$('img').on("error",function() {
		$(this).attr('src',"/plugins/dynamix.docker.manager/images/question.png");
	});
}

function saveState() {
	if ( ! dockerSearchFlag ) {
		console.log("Save State");
		$.cookie("categoryText",$("#Category").html());
		$.cookie("data",JSON.stringify(data));
		$.cookie("dockerSearchFlag",dockerSearchFlag);
		$.cookie("installMulti",$(".multi_installDiv").is(":visible"));
		var selectedMenu = $(".selectedMenu").data("category");
		if ( ! selectedMenu ) {
			selectedMenu = "";
		}
		$.cookie("selectedMenu",selectedMenu);
		$.cookie("sortIcon",isIconEnabled("#sortIcon"));

		$(".sortIcons").each(function() {
			if ( isIconEnabled(this) ) {
				$.cookie("sortButton",$(this).data("sort"));
			}
		});
	}
}

function restoreState() {
  swalBackground("transparent");

	console.log("Restore State");
	$("#Category").html($.cookie("categoryText"));
	if ( $.cookie("installMulti") == "true" ) {
		$(".multi_installDiv").show();
	} else {
		$(".multi_installDiv").hide();
	}
	data = JSON.parse($.cookie("data"));
	dockerSearchFlag = $.cookie("dockerSearchFlag");
	var selectedMenu = $.cookie("selectedMenu");
	if ( selectedMenu && ! data.searchFlag) {
		var menuItem = $.find(".caMenuItem[data-category='"+selectedMenu+"']");
		$(".caMenuItem").each(function(){
			$(this).removeClass("selectedMenu");
		});
		$(menuItem).addClass("selectedMenu");
		$(menuItem).parent().show();
	}
	enableIcon("#sortIcon",$.cookie("sortIcon"));
	$(".sortIcons").each(function() {
		$(this).removeClass("enabledIcon");
	});
	var selectedSort = $.cookie("sortButton");
	var sortIcon = $.find(".sortIcons[data-sort='"+selectedSort+"']");
	$(sortIcon).addClass("enabledIcon");
	var classList = $(sortIcon).attr('class').split(/\s+/);
	$.each(classList, function(index, item) {
		if ( item.startsWith("fa-") ) {
			$("#sortIcon").html("&nbsp;<span class="+item+"></span>");
		}
	});
	populateAutoComplete();
	getCategories();
	if ( $("#Category").text() == "Category: None Selected" ) {
		updateContent();
	}
}

function disableSearch() {
	$("#searchBox").prop("disabled",true);
}

function enableSearch() {
	$("#searchBox").prop("disabled",false);
}

function evaluateBoolean(str) {
	regex=/^\s*(true|1|on)\s*$/i
	return regex.test(str);
}

function cookiesEnabled() {
	return evaluateBoolean(navigator.cookieEnabled);
}

function isTouch() {
<?if ( $cfg['mobileAllowed'] == "true" ):?>
	try{ document.createEvent("TouchEvent"); return true; }
	catch(e){ return false; }
<?else:?>
	return false;
<?endif;?>
}

function showCredits() {
	$(".multi_installDiv,.dockerSearch").hide();
	clearCategory(); clearSearchBox();
	var credits = $('#caCredits').html();
	updateDisplay(credits);
}

function showStatistics() {
	$(".multi_installDiv,.dockerSearch").hide();
	clearCategory(); clearSearchBox();
	post({action:'statistics'},function(result) {
		updateDisplay(result.statistics);
	});
}

function caChangeLog() {
	$(".multi_installDiv,.dockerSearch").hide();
	clearCategory(); clearSearchBox();
	post({action:'caChangeLog'},function(result) {
		updateDisplay(result.changelog);
	});
}

function scrollToTop() {
	$('html,body').animate({scrollTop:0},0);
}

function addWarning(text,warning=true) {
	var z_index = $(".upgrade_notice").css("z-index"); 
	$(".ca_element_notice").css("z-index",z_index+1); // Warnings take precendence over unRaid's OS warnings
	if ( warning ) {
		text = "<i class='fa fa-warning'></i> "+text;
	}
	var arrayEntry = ca_WarningItems.push(text);
	showWarnings();
	if ( ! warningInterval && ca_WarningItems.length > 0) {
		warningInterval = setInterval(function() {
			showWarnings()
		},10000);
	}
	return (arrayEntry - 1);
}

function removeWarning(entry) {
	ca_WarningItems[entry] = false;
	ca_WarningItems = ca_WarningItems.filter(function(value,index,arr) {
		return value;
	});
}

function showWarnings() {
	var allWarnings = Object.values(ca_WarningItems);
	if ( allWarnings.length == 0 ) {
		$(".ca_plugin_notice,.ca_element_notice").hide();
		return;
	}
	if ( currentWarning >= allWarnings.length ) {
		currentWarning = 0;
	}
	$(".upgrade_notice").hide();
	$(".ca_plugin_notice,.ca_element_notice").show();
	$(".ca_plugin_notice").html(ca_WarningItems[currentWarning]);
  currentWarning++;
}

function addDockerWarning(enableDisable) {
	if (enableDisable) {
		if ( dockerWarningAdded === false) {
			dockerWarningAdded = addWarning('Docker Service Not Enabled - Only Plugins Available To Be Installed Or Managed');
		}
	} else {
		if ( dockerWarningAdded !== false ) {
			removeWarning(dockerWarningAdded);
			dockerWarningAdded = false;
		}
	}
}

function post(options,callback) {
	if ( typeof options === "function" ) {
		callback = options;
	} else {
		console.time(options.action);
		var msg = postCount > 0 ? "Embedded Post: " : "Post: ";
		console.log(msg+JSON.stringify(options));
	}

	if ( postCount == 0 && ! options.noSpinner ) {
		mySpinner();
	}
	postCount++;
	console.log("Post Count: "+postCount);
	if ( typeof callback === "function" ) {
		$.post(URL,options,function(retval){
			try {
				var result = JSON.parse(retval);
				if (result.error) {
					alert(result.error);
				}
			} catch(e) {
				alert("Error from POST call "+options.action+".  "+stripTags(retval));
				var result = retval;
			}
			console.groupCollapsed("Result "+options.action);
			console.timeEnd(options.action);
			console.log(result);
			console.groupEnd();
			eval(callback(result));
			if (result.script) {
				try {
					eval(result.script);
				} catch(e) {
					alert("Could not execute Script "+e);
				}
			}
			postCount--;
			if (postCount < 0) postCount = 0;
			if ( postCount == 0 && ! options.noSpinner) {
				myCloseSpinner();
			}
		});
	} else {
		$.post(URL,options);
		postCount--;
		if ( postCount < 0 ) postCount = 0;
		if ( postCount == 0) {
			myCloseSpinner();
		}
	}
	if ( ! cookiesEnabled() ) {
		if ( cookieWarning === false) {
			cookieWarning = addWarning("Community Applications works best when cookies are enabled in your browser.  Certain features may not be available.");
			console.log("cookie warning:"+cookieWarning);
			console.log("warning added");
		}
	} else {
		if ( cookieWarning !== false ) {
			removeWarning(cookieWarning);
			cookieWarning = false;
			console.log("warning removed");
		}
	}
}

function getCategories() {
	post({action:'get_categories'},function(result) {
		$("#category_list").html(result.categories);
	});
}
</script>

> <i class='fa fa-sort enabledIcon' aria-hidden='true' style='font-size:2rem;'></i> - This chooses how to sort the results<br><br>
> <i class='fa fa-download' aria-hidden='true' style='font-size:2rem;'></i> <i class='fa fa-edit' aria-hidden='true' style='font-size:2rem;'></i> - These icons respectively will <span class='ca_bold'>Install or Edit</span> an application<br>
> <i class='fa fa-globe' aria-hidden='true' style='font-size:2rem;'></i> <i class='fa fa-cog' aria-hidden='true' style='font-size:2rem;'></i> - Clicking these icons will take you to an application's GUI or settings<br>
> <span class='ca_fa-support' style='font-size:2rem;'></span> This will take you to the appropriate support thread for an application<br>
> <span class='ca_fa-project' style='font-size:2rem;'></span> This will take you to the project page for an application<br>
> <i class='fa fa-window-close' aria-hidden='true' style='font-size:2rem;color:maroon;'></i> - Clicking this icon will uninstall the application or delete it from the lists depending upon your current section<br>
> <span class='unpinned'> </span><span class='pinned'></span> Clicking these icons will pin / unpin an application for later viewer (from the Pinned Apps section)<br>
> <i class='fa fa-info-circle' aria-hidden='true' style='font-size:2rem;'></i> Clicking this will display more information about the application.  NOTE: You can also click on the application's icon to display more information.<br>
> <i class='fa fa-exclamation-triangle' aria-hidden='true' style='font-size:2rem;'></i> Clicking this will display any warnings or extra comments about the application<br>
> <center>For support for this plugin, visit <a title='click for help' href="https://lime-technology.com/forums/topic/38582-plug-in-community-applications/" target="_blank">HERE</a></center>
> <center><a href='https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7M7CBCVU732XG' target='_blank'><img src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif"></a></center>
<div class='menuItems'>
<div class='menuHeader'>MENU</div>
<ul class='caMenu'>
	<li class='caMenuItem sectionMenu' data-category='installed_apps'>Installed Apps</li>
	<li class='caMenuItem sectionMenu' data-category='previous_apps'>Previous Apps</li>
	<li class='caMenuItem sectionMenu' data-category='pinned_apps'>Pinned Apps</li>
</ul>
<div class='menuHeader'>CATEGORIES</div>
<ul class='caMenu'>
	<li class='startupButton caMenuItem' data-category='onlynew'>New Apps</li>
	<li class='startupButton caMenuItem' data-category='new'>Updated Apps</li>
	<li class='startupButton caMenuItem' data-category='random'>Random Apps</li>
	<li class='startupButton caMenuItem' data-category='topperforming'>Top Performing</li>
	<li class='startupButton caMenuItem' data-category='trending'>Trending Apps</li>
</ul>
<ul class='caMenu'>
	<span id='category_list'></span>
	<li class='categoryMenu caMenuItem' data-category='All'>All Apps</li>
</ul>
<div class='menuHeader'>OTHER</div>
<ul class='caMenu'>
	<li class='caMenuItem' onclick='window.location="/Apps/ca_settings"'>Settings</a></li>
	<li class='caMenuItem' onclick='disableSort();scrollToTop();showStatistics();'>Statistics</li>
	<li class='caMenuItem' onclick='disableSort();scrollToTop();showCredits();'>Credits</li>
	<li class='caMenuItem'><a class='caMenuItem' href='https://forums.unraid.net/topic/38582-plug-in-community-applications/' target='_blank' style='text-decoration:none;color:inherit;'>Support</a></li>
	</ul>
<div class='menuHeader'>VERSION</div>
<ul class='nonselectMenu'>
	<li><span id='caInstalledVersion'></span></li>
	<li class='caMenuItem caChangeLog'>Change Log</li>
</ul>
 <br><br><br>
</div>
<br>
</span><br>
<div class='mainArea'>
<div class='spinner fixed'></div>
<div class='multi_installDiv'><div class='ca_center'><input class='multi_install multi_installButton' type='button' value='Install Selected Applications' disabled><input type='button' class='multi_installClear' value='Clear Selected' disabled></div></div>
<strong><font size='3'></strong></font>
<div class='dockerSearch' style='display:none'><div class='ca_center'><i class='fa fa-docker initDockerSearch' style='font-size:5rem;color:DarkCyan;cursor:pointer;'></i><br><a class='initDockerSearch' style='cursor:pointer;'>Click Here To Get More Results From DockerHub</a></div></div>
<div id='templates_content'><div class='ca_templatesDisplay'>Updating Content</div></div>
<div class='multi_installDiv'><div class='ca_center'><input class='multi_install multi_installButton' type='button' value='Install Selected Applications' disabled><input type='button' class='multi_installClear' value='Clear Selected' disabled></div></div>
</div>
</div>
<span id='debugging'></span>
<span id='caCredits' style='display:none;'>
	<div style='overflow:scroll;overflow-x:hidden; overflow-y:auto;margin:auto;width:600px;padding-bottom:50px;'>
		<center><table style='margin-left:auto;padding-top:0px;margin-top:0px;'>
		<tr>
			<td colspan='3'><div class='ca_center'><i class='fa fa-users' style='font-size:5rem;margin-top:2rem;'></i></div></td>
			</tr>
			<tr>
				<td colspan='3'><div class='ca_center'><font size='5'>Community Applications</font></div></td>
			</tr>
			<tr>
				<td class='ca_credit'><img src='https://github.com/Squidly271/plugin-repository/raw/master/Chode_300.gif' style='width:5rem;height:4.8rem;'></td>
				<td class='ca_credit'><font size='4.0rem;'><span class='ca_italic ca_bold'>Andrew Zawadzki</span></font></strong></td>
				<td><font size='4.0rem;'><span class='ca_italic ca_bold'>Main Development</span></font></td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>bonienl<br>eschultz</td>
				<td class='ca_credit'>Additional Contributions</td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>Mex</td>
				<td class='ca_credit'>GUI Layout Design</td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>Andrew Zawadzki<br>Kode<br>Limetech</td>
				<td class='ca_credit'>Application Feed</td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>CHBMB<br>SpaceInvaderOne<br>Sparklyballs<br>wgstarks<br>DJoss<br>Zer0Nin3r<br>Mex<br>prostuff1<br>bonienl<br>ljm42<br>kizer<br>trurl</td>
				<td class='ca_credit'>Additional Testing</td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>dockerPolice<br>pluginCop</td>
				<td class='ca_credit'>Moderation</td>
			</tr>
			<tr>
				<td colspan='3' class='ca_credit'><div class='ca_center'><font size='3'>Additional Libraries</font><br><font size='0'>(All licenced under MIT licence)</font></div></td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>Lea Verou</td>
				<td class='ca_credit'>Awesomeplete</td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>Chart.js Contributors</td>
				<td class='ca_credit'>Chart.js</td>
			</tr>
			<tr>
				<td></td>
				<td class='ca_credit'>Miles Johnson</td>
				<td class='ca_credit'>XML2Array<br>Array2XML</td>
			</tr>
		</table></center>
		<br>
		<div class='ca_center ca_italic'><font size='1rem;'>Copyright &copy; 2015-2019 Andrew Zawadzki</font></div>
		<div class='ca_center'><a href='https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7M7CBCVU732XG' target='_blank'><img src='https://github.com/Squidly271/community.applications/raw/master/webImages/donate-button.png' style='height:2.5rem;'></a></div>
		<div class='ca_center'>Ensuring only safe applications are present is a full time job</div>
	</div>
</span>